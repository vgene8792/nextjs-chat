# You must first activate a Billing Account here: https://platform.openai.com/account/billing/overview
# Then get your OpenAI API Key here: https://platform.openai.com/account/api-keys
OPENAI_API_KEY=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

# Generate a random secret: https://generate-secret.vercel.app/32 or `openssl rand -base64 32`
AUTH_SECRET=b61b01a285d689bfcd800016b7620af6
# Create a GitHub OAuth app here: https://github.com/settings/applications/new
# Authorization callback URL: https://authjs.dev/reference/core/providers_github#callback-url
AUTH_GITHUB_ID=e34ad11e0e38ede6c37e
AUTH_GITHUB_SECRET=3bf81146742912c76b55af671edc08edf366d963
# Support OAuth login on preview deployments, see: https://authjs.dev/guides/basics/deployment#securing-a-preview-deployment
# Set the following only when deployed. In this example, we can reuse the same OAuth app, but if you are storing users, we recommend using a different OAuth app for development/production so that you don't mix your test and production user base.
# AUTH_REDIRECT_PROXY_URL=https://YOURAPP.vercel.app/api/auth

# Instructions to create kv database here: https://vercel.com/docs/storage/vercel-kv/quickstart and
KV_URL="redis://default:c274b142a44a43b4a1469ff375123535@many-jaguar-40359.kv.vercel-storage.com:40359"
KV_REST_API_URL="https://many-jaguar-40359.kv.vercel-storage.com"
KV_REST_API_TOKEN="AZ2nASQgOWI5YTBiNjktMWQ1Yi00YjY1LTg5YTgtM2I4MDBkMzM1NzhhYzI3NGIxNDJhNDRhNDNiNGExNDY5ZmYzNzUxMjM1MzU="
KV_REST_API_READ_ONLY_TOKEN="Ap2nASQgOWI5YTBiNjktMWQ1Yi00YjY1LTg5YTgtM2I4MDBkMzM1NzhhEGn7slkhfJEYU8HiszGq6-X5_vuV6U9TSfoaMpLduC8="

